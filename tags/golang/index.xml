<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>golang on 3am engineering</title>
    <link>https://3am.engineering/tags/golang/</link>
    <description>Recent content in golang on 3am engineering</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 08 Jun 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://3am.engineering/tags/golang/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>A proper hardware plugin for the OP-Z synth</title>
      <link>https://3am.engineering/works/second-opz-plugin/</link>
      <pubDate>Sat, 08 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://3am.engineering/works/second-opz-plugin/</guid>
      <description>The, previous attempt at an OP-Z plugin thingy was a failure.
The boot time, the bugs, and overhead that come with running Linux + jack + supercollider stack on such a Raspberry Pi Zero is too much. You don&amp;rsquo;t need Linux if you want to run a medium complexity synth. But it also failed at being fun and easy to use.
 Teesny 3.6 and teensy audio board
  With teensy 3.</description>
    </item>
    
    <item>
      <title>Skip that intro!</title>
      <link>https://3am.engineering/works/skip-intro/</link>
      <pubDate>Fri, 19 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://3am.engineering/works/skip-intro/</guid>
      <description>If you ever binge-watched a series you should already be familiar with the urge to skip ASAP that intro/outro song.
Many streaming services already have a skip intro button, but how does it work? Did you think that the content partners need to specify timestamps for intro/outros at the content ingest stage? That would be too easy.
I attempted to automate the intro detection with chromaprint mostly for fun because it seems that was my definition of fun at the time.</description>
    </item>
    
    <item>
      <title>A hardware plugin for the OP-Z synth</title>
      <link>https://3am.engineering/works/first-opz-plugin/</link>
      <pubDate>Sat, 13 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://3am.engineering/works/first-opz-plugin/</guid>
      <description>Update 19.07.01 Update, half of this article is irrelevant now, OP-Z can sample from USB or the mic and support custom synth engines (kinda) after some updates.
Background Since I got my hands on the PO-20 “Arcade” I wanted to write custom firmware for it. Of course that wasn&amp;rsquo;t possible.
The next best thing was the OTTO inspired by OP-1. I considered joining the project for a moment but writing most of the components from scratch would take years to reach a v.</description>
    </item>
    
  </channel>
</rss>
